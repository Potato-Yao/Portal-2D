html,
body {
    height: 100vh;
    width: 100vw;
    padding: unset;
    margin: unset;
    font-family: "Noto Serif", "Noto Serif SC", serif;
    font-weight: 500;
    overflow: hidden;
}

:root {
    --theme: #193bb6;
}

.hide {
    display: none !important;
    visibility: hidden !important;
}

.menu {
    height: 100vh;
    width: 100vw;
}

.menu > .title {
    display: flex;
    position: absolute;
    top: 0px;
    left: 0px;
    height: 100vh;
    width: 100vw;
    background: var(--theme);
    align-items: center;
    justify-content: center;
    color: #FFFFFF;
    user-select: none;
}

.title .vertical {
    position: fixed;
    display: flex;
    flex-direction: column;
    font-size: 4rem;
    gap: 12rem;
    /* transform: skew(0, -10deg); */
}

.title .vertical>* {
    font-weight: 100;
}

@keyframes emergeText {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.title .horizontal {
    z-index: 1;
    opacity: 0;
    width: 35%;
    height: 35%;
    transform: skew(0, 0); /* 去掉后白块变大 */
    animation: 1s emergeText 1s cubic-bezier(0.23, 1, 0.32, 1) forwards;
}

@keyframes spreadIn {
    from {
        width: 0px;
        background: #FFFFFF;
    }

    to {
        width: 100%;
        background: #FFFFFF;
    }
}

@keyframes emergeBack {
    from {
        background-color: var(--theme);
        transform: scale(0.2, 0.2);
    }
    to {
        background-color: #bababa;
        transform: scale(1.2, 1.2);
    }
}

.title .horizontal::before {
    content: '';
    width: 100%;
    height: 100%;
    display: block;
    position: absolute;
    animation: 1s emergeBack 1s cubic-bezier(0.23, 1, 0.32, 1) forwards; /* 原动画为上面的 spreadIn，其余参数均不变 */
}

.title .horizontal>.icon {
    margin: 0 1rem 0.5rem 1rem;
    transform: skew(0, 0);
}
.title .horizontal>.icon img {
    width: 90%;
    height: 90%;
}

.button-container {
    z-index: 1;
    position: absolute;
    bottom: 0px;
    right: 0px;
    padding: 6vh 8vw;
    display: flex;
    flex-direction: row;
    gap: 1rem;
    transform: skew(0, 0deg);
    user-select: none;
}

.button-container .button { /* 选择.button-container下的.button子元素（游戏按钮） */
    display: flex; /* 启用Flex布局 */
    align-items: center; /* 文字在垂直方向居中 */
    position: relative; /* 相对定位，作为伪元素::before的参考 */
    cursor: pointer; /* 鼠标悬停时显示“手型”光标（提示可点击） */
    padding: 1rem 10rem 1rem 4rem; /* 内边距：上下0.5rem，左侧2rem，右侧5rem（右侧留更多空间） */
    text-align: center; /* 按钮内文字水平居中 */
    font-family: "Noto Serif", "Noto Serif SC", serif; /* 按钮文字字体（衬线字体，偏复古风格） */
    font-size: 1.5rem; /* 文字大小为1.25rem（约20px） */
    font-weight: 600; /* 文字粗细为600（半粗体） */
    background: #bababa; /* 按钮背景色使用全局主题色--theme */
    border: unset; /* 清除按钮默认边框 */
    color: var(--theme); /* 按钮文字颜色为白色 */
    transition: background-color 0.3s, color 0.3s;
}

.button-container .button::before { /* 为.button元素添加伪元素（左侧白色装饰线） */
    content: ''; /* 伪元素必须有content属性，空值表示无内容 */
    display: block; /* 伪元素设为块级元素（可设置宽高） */
    position: absolute; /* 绝对定位，相对于父元素.button */
    width: 0rem; /* 装饰线宽度为0.25rem（约4px） */ /* 改为0rem以去除装饰线 */
    height: 100%; /* 装饰线高度占满按钮 */
    top: 0px; /* 装饰线距离按钮顶部0px */
    left: 0px; /* 装饰线距离按钮左侧0px */
    background: #ffffff; /* 装饰线颜色为白色 */
}

.button-container .button:hover { /* 按钮鼠标悬停状态样式 */
    color: #ffffff; /* 文字颜色变为全局主题色（与背景色互换） */
    background-color: var(--theme);
}

.side {
    position: absolute;
    top: 1rem;
    left: -5px;
    color: #ffffff;
    font-size: 4rem;
    font-weight: 900;
    font-style: italic;
    font-family: "Inter", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
    letter-spacing: 0.05rem;
    /* writing-mode: vertical-rl; */
    user-select: none;
}

@keyframes spreadBg {
    0% {
        background-position: 100%; /* 动画开始时背景位置在100%处 */
    }

    100% {
        background-position: 0%; /* 动画结束时背景位置在0%处 */
    }
}

@keyframes fadeIn {
    from {
        transform: scale(105%, 105%);
        opacity: 1;
    }
    to {
        transform: scale(105%, 105%);
        opacity: 0;
    }
}

@keyframes fadeOut {
    from {
        transform: scale(105%, 105%);
        opacity: 0;
    }
    to {
        transform: scale(105%, 105%);
        opacity: 1;
    }
}

.transition {
    z-index: 2;
    position: absolute; /* 绝对定位 */
    top: -20vh; /* 距离顶部-20%视口高度（部分超出顶部） */
    left: 0px; /* 距离左侧0像素 */
    height: 140vh; /* 高度为140%视口高度（超出视口） */
    width: 100vw; /* 宽度为100%视口宽度 */
    /* transform: skew(0, -10deg); /* 沿Y轴倾斜-10度（向右倾斜） */
}

.transition.hidden {
    display: none; /* 隐藏元素 */
    visibility: hidden; /* 元素不可见 */
}

.transition > div {
    background: #0e0042;
    height: 25%; /* 高度为父元素的25%（4个子元素刚好填满） */
    width: 100%; /* 宽度为父元素的100% */
}

.transition.fadeIn > div {
    transform: scale(105%, 105%);
    opacity: 1;
}
.transition.fadeOut > div {
    transform: scale(105%, 105%);
    opacity: 0;
}

.transition.fadeIn > div:nth-child(1) {
    animation: 1.2s fadeIn 0.2s cubic-bezier(0.77, 0, 0.23, 1) forwards;
}
.transition.fadeIn > div:nth-child(2) {
    animation: 1.2s fadeIn 0.4s cubic-bezier(0.77, 0, 0.23, 1) forwards;
}
.transition.fadeIn > div:nth-child(3) {
    animation: 1.2s fadeIn 0.6s cubic-bezier(0.77, 0, 0.23, 1) forwards;
}
.transition.fadeIn > div:nth-child(4) {
    animation: 1.2s fadeIn 0.8s cubic-bezier(0.77, 0, 0.23, 1) forwards;
}

.transition.fadeOut > div:nth-child(1) {
    animation: 1.2s fadeOut 0.2s cubic-bezier(0.23, 1, 0.77, 1) forwards;
}
.transition.fadeOut > div:nth-child(2) {
    animation: 1.2s fadeOut 0.4s cubic-bezier(0.23, 1, 0.77, 1) forwards;
}
.transition.fadeOut > div:nth-child(3) {
    animation: 1.2s fadeOut 0.6s cubic-bezier(0.23, 1, 0.77, 1) forwards;
}
.transition.fadeOut > div:nth-child(4) {
    animation: 1.2s fadeOut 0.8s cubic-bezier(0.23, 1, 0.77, 1) forwards;
}

.save, .achievementDisp {
    height: 100vh;
    width: 100vw;
    display: flex;
    align-items: center;
    justify-content: center;

    color: #ffffff;
    background-color: var(--theme);
}

.achievementDisp {
    justify-content: start;
    padding: 5vh 10vw;
    box-sizing: border-box;
    overflow-x: auto;
    overflow-y: hidden;
    --offsetY: 0px;
}

.save > .save-container,
.achievementDisp > .achievement-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    user-select: none;
    transform: skew(0, 0deg); /* 去除倾斜 */
}

.achievementDisp > .achievement-container {
    flex-direction: row;
    gap: 4rem;
    position: relative;
    top: var(--offsetY)
}

.save-container > .title,
.achievement-container > .title {
    font-size: 5rem;
    font-weight: 100;
    flex-shrink: 0;
}

.save-container > .list {
    max-height: 300px;
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-width: thin;
}

.achievement-container > .list {
    max-height: 60vh;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
}

.save-container > .list > .list-item,
.achievement-container > .list > .list-item {
    padding: 0.5rem 5rem 0.5rem 2rem;
    text-align: center;
    font-family: "Noto Serif", "Noto Serif SC", serif;
    font-size: 1.25rem;
    font-weight: 600;
    background: var(--theme);
    border: unset;
    color: #ffffff;
    position: relative;
    display: flex;
    align-items: center;
    cursor: pointer;

    margin-top: 1rem;
}

.achievement-container > .list > .list-item {
    flex-direction: column;
    align-items: start;
    min-width: 250px;
    box-sizing: border-box;
}

.achievement-container>.list>.list-item > div {
    text-align: start;
}

.achievement-container > .list > .list-item > .desc {
    font-weight: 400;
    font-size: 0.8rem;
}

.save-container .list-item::before,
.achievement-container .list-item::before {
    content: '';
    display: block;
    position: absolute;
    width: 0.25rem;
    height: 100%;
    top: 0px;
    left: 0px;
    background: #ffffff;
}

.save-container .list-item:hover,
.achievement-container .list-item:hover {
    color: var(--theme);
    animation: 0.5s spreadBg cubic-bezier(0.23, 1, 0.32, 1) forwards;
    background: linear-gradient(90deg, #ffffff 0 50%, var(--theme) 50% 100%);
    background-size: 200% 100%;
}

.save-container > .button {
    display: none;
    visibility: hidden;
}
